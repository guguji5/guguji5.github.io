{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/tam-splitter-bar/tam-splitter-bar.component.html","webpack:///./src/app/components/tam-splitter-bar/tam-splitter-bar.component.scss","webpack:///./src/app/components/tam-splitter-bar/tam-splitter-bar.component.ts","webpack:///./src/app/components/tam-splitter-panel/tam-splitter-panel.component.html","webpack:///./src/app/components/tam-splitter-panel/tam-splitter-panel.component.scss","webpack:///./src/app/components/tam-splitter-panel/tam-splitter-panel.component.ts","webpack:///./src/app/components/tam-splitter/tam-splitter.component.html","webpack:///./src/app/components/tam-splitter/tam-splitter.component.scss","webpack:///./src/app/components/tam-splitter/tam-splitter.component.ts","webpack:///./src/app/components/tam.module.ts","webpack:///./src/app/pages/mac-notes-splitter/mac-notes-splitter.component.html","webpack:///./src/app/pages/mac-notes-splitter/mac-notes-splitter.component.scss","webpack:///./src/app/pages/mac-notes-splitter/mac-notes-splitter.component.ts","webpack:///./src/app/pages/nested-splitter/nested-splitter.component.html","webpack:///./src/app/pages/nested-splitter/nested-splitter.component.scss","webpack:///./src/app/pages/nested-splitter/nested-splitter.component.ts","webpack:///./src/app/pages/simple-splitter/simple-splitter.component.html","webpack:///./src/app/pages/simple-splitter/simple-splitter.component.scss","webpack:///./src/app/pages/simple-splitter/simple-splitter.component.ts","webpack:///./src/app/services/count.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SimpleSplitterComponent } from './pages/simple-splitter/simple-splitter.component';\nimport { NestedSplitterComponent } from './pages/nested-splitter/nested-splitter.component';\nimport { MacNotesSplitterComponent } from './pages/mac-notes-splitter/mac-notes-splitter.component';\n\nconst routes: Routes = [\n  { path: 'simple', component: SimpleSplitterComponent },\n  { path: 'nested', component: NestedSplitterComponent },\n  { path: 'macnotes', component: MacNotesSplitterComponent },\n  { path: '', redirectTo: '/simple', pathMatch: 'full' },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".button-group{\\n    position: fixed;\\n    top:10px;\\n    right:10px;\\n    width: 50px;\\n    z-index:1;\\n}\"","module.exports = \"<router-outlet></router-outlet>\\n<div class=\\\"button-group\\\">\\n    <button routerLink=\\\"/simple\\\">simple</button>\\n    <button routerLink=\\\"/nested\\\">nested</button>\\n    <button routerLink=\\\"/macnotes\\\">macnotes</button>\\n</div>\\n<div class=\\\"fork-me-wrapper\\\">\\n    <div class=\\\"fork-me\\\">\\n        <a class=\\\"fork-me-link\\\" href=\\\"https://github.com/guguji5/angular-splitter\\\">\\n            <span class=\\\"fork-me-text\\\">Star Me On GitHub</span>\\n        </a>\\n    </div>\\n\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HashLocationStrategy, LocationStrategy } from \"@angular/common\";\n// import { TamModule } from 'angular-splitter';\nimport { AppComponent } from './app.component';\nimport { TamModule } from './components/tam.module';\nimport { AppRoutingModule } from './/app-routing.module';\n// import { TamSplitterComponent } from './components/tam-splitter/tam-splitter.component';\n// import { TamSplitterPanelComponent } from './components/tam-splitter-panel/tam-splitter-panel.component';\n// import { TamSplitterBarComponent } from './components/tam-splitter-bar/tam-splitter-bar.component';\nimport { SimpleSplitterComponent } from './pages/simple-splitter/simple-splitter.component';\nimport { NestedSplitterComponent } from './pages/nested-splitter/nested-splitter.component';\nimport { MacNotesSplitterComponent } from './pages/mac-notes-splitter/mac-notes-splitter.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // TamSplitterComponent,\n    // TamSplitterPanelComponent,\n    // TamSplitterBarComponent,\n    SimpleSplitterComponent,\n    NestedSplitterComponent,\n    MacNotesSplitterComponent\n  ],\n  imports: [\n    // BrowserModule,\n    AppRoutingModule,\n    TamModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \":host {\\n  background: gray;\\n  flex-grow: 0;\\n  flex-shrink: 0; }\\n  :host.horizontal:hover {\\n    cursor: ew-resize; }\\n  :host.vertical:hover {\\n    cursor: ns-resize; }\\n\"","import { Component, OnInit, Input, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { getOrCreateChangeDetectorRef } from '@angular/core/src/render3/di';\n\n@Component({\n    selector: 'tam-splitter-bar',\n    templateUrl: './tam-splitter-bar.component.html',\n    styleUrls: ['./tam-splitter-bar.component.scss']\n})\nexport class TamSplitterBarComponent implements OnInit {\n    @Input() width;\n    private _direction: 'vertical' | 'horizontal';\n\n    @Input() set direction(v: 'vertical' | 'horizontal') {\n        this._direction = v;\n        this.refreshStyle();\n    }\n\n    get direction(): 'vertical' | 'horizontal' {\n        return this._direction;\n    }\n\n    @Input() set order(v: number) {\n        this.renderer.setStyle(this.elRef.nativeElement, 'order', v);\n    }\n\n    constructor(private elRef: ElementRef,\n        private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    private refreshStyle(): void {\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', `${this.width}px`);\n        // add a class to control the cursor\n        this.renderer.removeClass(this.elRef.nativeElement, 'vertical');\n        this.renderer.removeClass(this.elRef.nativeElement, 'horizental');\n        this.renderer.addClass(this.elRef.nativeElement, this.direction);\n\n        // fix safari bug about gutter height when direction is horizontal\n        this.renderer.setStyle(this.elRef.nativeElement, 'height', (this.direction === 'vertical') ? `${this.width}px` : `100%`);\n\n    }\n\n}\n","module.exports = \"<ng-content></ng-content>\"","module.exports = \":host {\\n  overflow: hidden auto;\\n  transition-property: flex;\\n  transition-duration: 0s;\\n  transition-timing-function: linear; }\\n\"","import { Component, OnInit, Optional, Renderer2, Input, ElementRef, HostBinding, Output, EventEmitter } from '@angular/core';\nimport { TamSplitterComponent } from '../tam-splitter/tam-splitter.component';\n\n@Component({\n    selector: 'tam-splitter-panel',\n    templateUrl: './tam-splitter-panel.component.html',\n    styleUrls: ['./tam-splitter-panel.component.scss']\n})\nexport class TamSplitterPanelComponent implements OnInit {\n    private _order: number | null = null;\n    private _size: number | null = null;\n    private _visible: boolean = true;\n    public index: number;\n    @Input() set size(v: number | null) {\n        this._size = Number(v);\n        this.splitterComponent.updatePanel(this);\n    }\n\n    get size() {\n        return this._size;\n    }\n    @Input() set order(v: number | null) {\n        v = Number(v);\n        this._order = !isNaN(v) ? v : null;\n\n        this.setStyleOrder(this._order);\n    }\n\n    get order(): number | null {\n        return this._order;\n    }\n\n\n    @Input() max: number;\n    @Input() min: number;\n    @Input() set visible(v: boolean) {\n        let sizeArr = this.splitterComponent.displayedPanels.map(value => value.size)\n        // prevent the event fired in the init process\n        if (sizeArr.length > 0) {\n            if (this.splitterComponent.useTransition) {\n                // if the useTransition is set true, then use 300 ms\n                if (this.splitterComponent.useTransition === true) {\n                    this.splitterComponent.setTransitionTime(300);\n                } else {\n                    this.splitterComponent.setTransitionTime(this.splitterComponent.useTransition);\n                }\n            }\n            this.collapsedChange.emit({\n                collapsed: !v,\n                sizes: sizeArr,\n                collapsedComponentSize: this.size\n            })\n            // after the collapse event, set the transition back to 0s;\n            if (this.splitterComponent.useTransition) {\n                if (this.splitterComponent.useTransition === true) {\n                    setTimeout(() => {\n                        this.splitterComponent.setTransitionTime(0);\n                    }, 300)\n\n                } else {\n                    setTimeout(() => {\n                        this.splitterComponent.setTransitionTime(0);\n                    }, this.splitterComponent.useTransition)\n                }\n            }\n        }\n\n        v = (typeof (v) === 'boolean') ? v : (v === 'false' ? false : true);\n        this._visible = v;\n        if (this.visible) {\n            this.splitterComponent.showPanel(this);\n        }\n        else {\n            this.splitterComponent.hidePanel(this);\n        }\n    };\n\n    get visible(): boolean {\n        return this._visible;\n    }\n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    constructor(@Optional() public splitterComponent: TamSplitterComponent, public renderer: Renderer2, private elRef: ElementRef) { }\n\n    ngOnInit() {\n        if (this.splitterComponent) {\n            this.splitterComponent.addPanel(this);\n        }\n\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', '0');\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', '0');\n    }\n    ngOnDestroy(): void {\n\n        this.splitterComponent.removePanel(this);\n    }\n\n    public setStyleOrder(value: number): void {\n        this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\n    }\n    public setStyleTransitionTime(value: string): void {\n        this.renderer.setStyle(this.elRef.nativeElement, 'transition-duration', value);\n    }\n    public setStyleFlexbasis(value: string): void {\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', value);\n    }\n\n    public getSizePixel(prop: 'offsetWidth' | 'offsetHeight'): number {\n        return this.elRef.nativeElement[prop];\n    }\n\n    public setStyleVisibleAndDir(isVisible: boolean, isDragging: boolean, direction: 'horizontal' | 'vertical'): void {\n        if (isVisible === false) {\n            this.setStyleFlexbasis('0');\n            this.renderer.setStyle(this.elRef.nativeElement, 'overflow-x', 'hidden');\n            this.renderer.setStyle(this.elRef.nativeElement, 'overflow-y', 'hidden');\n\n            if (direction === 'vertical') {\n                this.renderer.setStyle(this.elRef.nativeElement, 'max-width', '0');\n            }\n        }\n        else {\n            this.renderer.setStyle(this.elRef.nativeElement, 'overflow-x', 'hidden');\n            this.renderer.setStyle(this.elRef.nativeElement, 'overflow-y', 'auto');\n            this.renderer.removeStyle(this.elRef.nativeElement, 'max-width');\n        }\n\n        if (direction === 'horizontal') {\n            this.renderer.setStyle(this.elRef.nativeElement, 'height', '100%');\n            this.renderer.removeStyle(this.elRef.nativeElement, 'width');\n        }\n        else {\n            this.renderer.setStyle(this.elRef.nativeElement, 'width', '100%');\n            this.renderer.removeStyle(this.elRef.nativeElement, 'height');\n        }\n    }\n}\n","module.exports = \"<ng-content></ng-content>\\n<ng-template ngFor let-area [ngForOf]=\\\"displayedPanels\\\" let-index=\\\"index\\\" let-last=\\\"last\\\">\\n    <tam-splitter-bar *ngIf=\\\"last === false\\\" [direction]=\\\"direction\\\" [order]=\\\"index*2+1\\\" [width]=\\\"splitterBarWidth\\\" (mousedown)=\\\"startDragging($event, index*2+1, index+1)\\\"></tam-splitter-bar>\\n\\n</ng-template>\"","module.exports = \":host {\\n  height: 100%;\\n  width: 100%;\\n  display: flex; }\\n\"","import { Component, OnInit, Input, NgZone, ElementRef, ChangeDetectorRef, Renderer2, HostBinding, Output, EventEmitter } from '@angular/core';\nimport { TamSplitterPanelComponent } from '../tam-splitter-panel/tam-splitter-panel.component';\nimport index from './../../services/count'\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n@Component({\n    selector: 'tam-splitter',\n    templateUrl: './tam-splitter.component.html',\n    styleUrls: ['./tam-splitter.component.scss']\n})\nexport class TamSplitterComponent implements OnInit {\n    public readonly displayedPanels: Array<TamSplitterPanelComponent> = [];\n    private readonly hidedPanels: Array<TamSplitterPanelComponent> = [];\n    @Input() useTransition: boolean | number = false;\n    // the type interface of the layout, that will effact the behavior of drag. Temporarily it has two types.\n    @Input() type: 'standard' | 'macNotes' = 'standard';\n    @Input() splitterBarWidth: number = 8;\n    currentbarNum: number;\n    draggingWithoutMove: boolean;\n    private readonly dragListeners: Array<Function> = [];\n    private isDragging: boolean = false;\n\n    private _direction: 'horizontal' | 'vertical' = 'horizontal';\n\n    @Input() set direction(v: 'horizontal' | 'vertical') {\n        v = (v === 'vertical') ? 'vertical' : 'horizontal';\n        this._direction = v;\n\n        [...this.displayedPanels, ...this.hidedPanels].forEach(panel => {\n            panel.setStyleVisibleAndDir(panel.visible, this.isDragging, this.direction);\n        });\n\n        this.build();\n    }\n\n    get direction(): 'horizontal' | 'vertical' {\n        return this._direction;\n    }\n\n    private readonly dragStartValues = {\n        sizePixelContainer: 0,\n        sizePixelA: 0,\n        sizePixelB: 0,\n        sizePercentA: 0,\n        sizePercentB: 0,\n    };\n    @Output() sizeChange: EventEmitter<any> = new EventEmitter();\n    @HostBinding('style.flex-direction') get cssFlexdirection() {\n        return (this.direction === 'horizontal') ? 'row' : 'column';\n    }\n\n    constructor(private ngZone: NgZone, private elRef: ElementRef,\n        private cdRef: ChangeDetectorRef,\n        private renderer: Renderer2) {\n    }\n\n    ngOnInit() {\n        if (typeof (this.useTransition) === \"number\" && this.useTransition < 100) {\n            console.warn(`if the input 'useTransition' is a number, it's a millisecond value. Please set a number between 100 and 1000,`)\n        }\n    }\n\n\n\n    ngAfterViewInit() {\n        console.log(this.isType('macNotes'));\n    }\n\n    build() {\n        if (this.displayedPanels.every(a => a.index !== null)) {\n            this.displayedPanels.sort((a, b) => (<number>a.index) - (<number>b.index));\n        }\n\n        // Then set real order with multiples of 2, numbers between will be used by gutters.\n        this.displayedPanels.forEach((panel: TamSplitterPanelComponent, key: number) => {\n            panel.order = 2 * key;\n        })\n        this.refreshStyleSizes();\n    }\n    private isType(type: string): boolean {\n        return this.type === type;\n    }\n    private refreshStyleSizes(): void {\n        const sumbarSize = this.splitterBarWidth * (this.displayedPanels.length - 1);\n\n        this.displayedPanels.forEach(panel => {\n            panel.setStyleFlexbasis(`calc( ${panel.size}% - ${sumbarSize * panel.size / 100}px )`)\n        });\n    }\n\n    addPanel(panel: TamSplitterPanelComponent): void {\n        panel.index = index();\n        if (panel.visible) {\n            this.displayedPanels.push(panel)\n        } else {\n            this.hidedPanels.push(panel);\n        }\n        panel.setStyleVisibleAndDir(panel.visible, this.isDragging, this.direction);\n        this.build();\n    }\n\n    updatePanel(panel: TamSplitterPanelComponent): void {\n        // Only refresh if panel is displayed (No need to check inside 'hidedPanels')\n\n        const item = this.displayedPanels.find(a => a === panel);\n        if (item) {\n            this.build();\n        }\n    }\n    showPanel(panel: TamSplitterPanelComponent): void {\n        const area = this.hidedPanels.find(a => a === panel);\n\n        if (area) {\n            panel.setStyleVisibleAndDir(panel.visible, this.isDragging, this.direction);\n\n            const panels = this.hidedPanels.splice(this.hidedPanels.indexOf(area), 1);\n            this.displayedPanels.push(...panels);\n\n            this.build();\n        }\n    }\n\n    hidePanel(panel: TamSplitterPanelComponent): void {\n        const area = this.displayedPanels.find(a => a === panel);\n\n        if (area) {\n            panel.setStyleVisibleAndDir(panel.visible, this.isDragging, this.direction);\n\n            const areas = this.displayedPanels.splice(this.displayedPanels.indexOf(area), 1);\n            // areas.forEach(area => {\n            //     area.order = 0;\n            //     // area.size = 0;\n            // })\n            this.hidedPanels.push(...areas);\n\n            this.build();\n        }\n    }\n    removePanel(panel: TamSplitterPanelComponent): void {\n        if (this.displayedPanels.some(a => a === panel)) {\n            const area = <TamSplitterPanelComponent>this.displayedPanels.find(a => a === panel)\n            this.displayedPanels.splice(this.displayedPanels.indexOf(area), 1);\n\n            this.build();\n        }\n        else if (this.hidedPanels.some(a => a === panel)) {\n            const area = <TamSplitterPanelComponent>this.hidedPanels.find(a => a === panel)\n            this.hidedPanels.splice(this.hidedPanels.indexOf(area), 1);\n        }\n    }\n    setTransitionTime(ms: number): void {\n        this.displayedPanels.forEach((panel: TamSplitterPanelComponent) => {\n            panel.setStyleTransitionTime(ms / 1000 + 's')\n        })\n    }\n    /* below function is used for the drag event */\n    startDragging(startEvent: MouseEvent | TouchEvent, barOrder: number, barNum: number): void {\n        startEvent.preventDefault();\n\n        // Place code here to allow '(gutterClick)' event even if '[disabled]=\"true\"'.\n        this.currentbarNum = barNum;\n        this.draggingWithoutMove = true;\n        this.ngZone.runOutsideAngular(() => {\n            this.dragListeners.push(this.renderer.listen('document', 'mouseup', (e: MouseEvent) => this.stopDragging()));\n            this.dragListeners.push(this.renderer.listen('document', 'touchend', (e: TouchEvent) => this.stopDragging()));\n            this.dragListeners.push(this.renderer.listen('document', 'touchcancel', (e: TouchEvent) => this.stopDragging()));\n        });\n\n\n        const panelA = this.displayedPanels.find(a => a.order === barOrder - 1);\n\n        let alterPanelA; // the alternative of A panel\n        if (barOrder === 3 && this.displayedPanels.length === 3 && this.direction === \"horizontal\" && this.isType('macNotes')) {\n            alterPanelA = this.displayedPanels.find(a => a.order === 0);\n        }\n        let panelB;\n        // as notes on mac does, when user drag the left panel, its width should give the last one.\n        if (barOrder === 1 && this.displayedPanels.length === 3 && this.direction === \"horizontal\" && this.isType('macNotes')) {\n            panelB = this.displayedPanels.find(a => a.order === 4);\n        } else {\n            panelB = this.displayedPanels.find(a => a.order === barOrder + 1);\n        }\n        if (!panelA || !panelB) {\n            return;\n        }\n\n        const prop = (this.direction === 'horizontal') ? 'offsetWidth' : 'offsetHeight';\n        this.dragStartValues.sizePixelContainer = this.elRef.nativeElement[prop];\n        this.dragStartValues.sizePixelA = panelA.getSizePixel(prop);\n        this.dragStartValues.sizePixelB = panelB.getSizePixel(prop);\n        this.dragStartValues.sizePercentA = panelA.size;\n        this.dragStartValues.sizePercentB = panelB.size;\n\n        let start: {\n            x: number;\n            y: number;\n        };\n        if (startEvent instanceof MouseEvent) {\n            start = {\n                x: startEvent.screenX,\n                y: startEvent.screenY,\n            };\n        }\n        else if (startEvent instanceof TouchEvent) {\n            start = {\n                x: startEvent.touches[0].screenX,\n                y: startEvent.touches[0].screenY,\n            };\n        }\n        else {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            this.dragListeners.push(this.renderer.listen('document', 'mousemove', (e: MouseEvent) => this.dragEvent(e, start, panelA, panelB, alterPanelA)));\n            this.dragListeners.push(this.renderer.listen('document', 'touchmove', (e: TouchEvent) => this.dragEvent(e, start, panelA, panelB, alterPanelA)));\n        });\n        this.isDragging = true;\n    }\n\n    private dragEvent(event: MouseEvent | TouchEvent, start: IPoint, panelA: TamSplitterPanelComponent, panelB: TamSplitterPanelComponent, alterPanelA: TamSplitterPanelComponent): void {\n        if (!this.isDragging) {\n            return;\n        }\n\n        let end: IPoint;\n        if (event instanceof MouseEvent) {\n            end = {\n                x: event.screenX,\n                y: event.screenY,\n            };\n        }\n        else if (event instanceof TouchEvent) {\n            end = {\n                x: event.touches[0].screenX,\n                y: event.touches[0].screenY,\n            };\n        }\n        else {\n            return;\n        }\n        this.draggingWithoutMove = false;\n        this.drag(start, end, panelA, panelB, alterPanelA);\n    }\n\n    private drag(start: IPoint, end: IPoint, panelA: TamSplitterPanelComponent, panelB: TamSplitterPanelComponent, alterPanelA: TamSplitterPanelComponent): void {\n        // ¤ AREAS SIZE PIXEL\n\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        let offsetPixel = (this.direction === 'horizontal') ? (start.x - end.x) : (start.y - end.y);\n\n        // comment from damon.du  I don't know why we need this\n        // offsetPixel = offsetPixel / devicePixelRatio;\n\n        let newSizePixelA = this.dragStartValues.sizePixelA - offsetPixel;\n        let newSizePixelB = this.dragStartValues.sizePixelB + offsetPixel;\n\n        // ¤ AREAS SIZE PERCENT\n\n        // NEW_PERCENT = START_PERCENT / START_PIXEL * NEW_PIXEL;\n        if (this.dragStartValues.sizePercentA === 0) {\n            panelB.size = this.dragStartValues.sizePercentB / this.dragStartValues.sizePixelB * newSizePixelB;\n            panelA.size = this.dragStartValues.sizePercentB - panelB.size;\n        }\n        else if (this.dragStartValues.sizePercentB === 0) {\n            panelA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\n            panelB.size = this.dragStartValues.sizePercentA - panelA.size;\n        }\n        else {\n            // based on the logical percentage panel width(A and B);\n            panelA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\n            panelB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - panelA.size;\n\n            if (panelA.size >= panelA.max) {\n                panelA.size = panelA.max;\n                panelB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - panelA.size;\n            } else if (panelA.size <= panelA.min) {\n                panelA.size = panelA.min;\n                // handle the macNotes behaivor\n                if (alterPanelA) {\n                    // calculate alterA percentage with the size.\n                    let sizePixelalterA = this.dragStartValues.sizePixelContainer - this.dragStartValues.sizePixelA - this.dragStartValues.sizePixelB;\n                    let offsetPixelalterA = offsetPixel - (this.dragStartValues.sizePixelA - this.dragStartValues.sizePixelContainer * panelA.min / 100);\n                    let newSizePixelalterA = sizePixelalterA - offsetPixelalterA;\n                    if (newSizePixelalterA <= this.dragStartValues.sizePixelContainer * alterPanelA.min / 100) {\n                        alterPanelA.size = alterPanelA.min\n                    } else {\n                        alterPanelA.size = newSizePixelalterA / this.dragStartValues.sizePixelContainer * 100;\n                        panelB.size = 100 - panelA.size - alterPanelA.size;\n                    }\n                } else {\n                    panelB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - panelA.size;\n                }\n            } else {\n                panelB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - panelA.size;\n            }\n\n            if (panelB.size >= panelB.max) {\n                if (alterPanelA) {\n                    panelB.size = panelB.max;\n                } else {\n                    panelB.size = panelB.max;\n                    panelA.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - panelB.size;\n                }\n\n            } else if (panelB.size <= panelB.min) {\n                panelB.size = panelB.min;\n                panelA.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - panelB.size;\n            }\n        }\n\n        let sizeArr = this.displayedPanels.map(value => value.size)\n        if (sizeArr.length > 0) {\n            this.sizeChange.emit({\n                barNum: this.currentbarNum,\n                sizes: sizeArr\n            })\n\n        }\n\n        this.refreshStyleSizes();\n    }\n\n    private stopDragging(): void {\n        if (this.isDragging === false && this.draggingWithoutMove === false) {\n            return;\n        }\n\n        while (this.dragListeners.length > 0) {\n            const fct = this.dragListeners.pop();\n            if (fct) {\n                fct();\n            }\n        }\n\n        this.isDragging = false;\n        this.draggingWithoutMove = false;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { TamSplitterComponent } from './tam-splitter/tam-splitter.component';\nimport { TamSplitterPanelComponent } from './tam-splitter-panel/tam-splitter-panel.component';\nimport { TamSplitterBarComponent } from './tam-splitter-bar/tam-splitter-bar.component';\n\n@NgModule({\n    declarations: [\n        TamSplitterComponent,\n        TamSplitterPanelComponent,\n        TamSplitterBarComponent\n    ],\n    imports: [\n        BrowserModule,\n    ],\n    exports: [TamSplitterComponent,\n        TamSplitterPanelComponent,\n        TamSplitterBarComponent\n    ]\n})\nexport class TamModule { }\n","module.exports = \"<tam-splitter splitterBarWidth=3 [direction]=\\\"snippetView.direction\\\" (sizeChange)=\\\"sizeChange($event)\\\" [useTransition]=\\\"100\\\"\\n    [type]=\\\"'macNotes'\\\">\\n    <tam-splitter-panel [size]=\\\"snippetView.refinedByWidth\\\" [max]=\\\"snippetView.refinedByMax\\\" [min]=\\\"snippetView.refinedByMin\\\"\\n        [visible]=\\\"snippetView.refineByShow\\\" (collapsedChange)=\\\"collapsedChange($event)\\\">\\n        <h3>Left Panel</h3>\\n        <p>when draging the first bar, the width of center panel should be frozing.</p>\\n    </tam-splitter-panel>\\n    <tam-splitter-panel [visible]=\\\"snippetView.middleShow\\\" [size]=\\\"snippetView.middleWidth\\\" [max]=\\\"snippetView.middleMax\\\"\\n        [min]=\\\"snippetView.middleMin\\\">\\n        <h3>Center Panel</h3>\\n        <p>when draging the second bar, the increase or decrease will get from the center panel at priority, and from\\n            the left panel.</p>\\n    </tam-splitter-panel>\\n    <tam-splitter-panel [size]=\\\"snippetView.previewWidth\\\" [max]=\\\"snippetView.previewMax\\\" [min]=\\\"snippetView.previewMin\\\">\\n        <h3>Right Panel</h3>\\n    </tam-splitter-panel>\\n</tam-splitter>\\n<button (click)=\\\"collapse()\\\">collapse</button>\\n<button class=\\\"btn\\\" (click)=\\\"changeDir()\\\">change</button>\"","module.exports = \":host {\\n  width: 100%;\\n  height: 100%;\\n  display: block; }\\n\\nbutton {\\n  position: fixed;\\n  bottom: 10px;\\n  left: 10px; }\\n\\nbutton.btn {\\n    right: 10px;\\n    left: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'mac-notes-splitter',\n    templateUrl: './mac-notes-splitter.component.html',\n    styleUrls: ['./mac-notes-splitter.component.scss']\n})\nexport class MacNotesSplitterComponent implements OnInit {\n    \n    constructor() { }\n\n    ngOnInit() {\n    }\n    snippetView = {\n        direction: \"horizontal\",\n        refinedByWidth: 20,\n        refinedByMax: 30,\n        refinedByMin: 10,\n        refineByShow: true,\n\n        middleWidth: 30,\n        middleMax: 40,\n        middleMin: 20,\n        middleShow: true,\n\n        previewWidth: 50,\n        previewMax: 70,\n        previewMin: 30\n    }\n\n    collapse() {\n        this.snippetView.refineByShow = !this.snippetView.refineByShow;\n    }\n    changeDir() {\n        // this.snippetView.middleShow = !this.snippetView.middleShow;\n        this.snippetView.direction = this.snippetView.direction === \"horizontal\" ? \"vertical\" : \"horizontal\"\n    }\n    collapsedChange(e) {\n        if (e.collapsed) {\n            this.snippetView.previewWidth = e.collapsedComponentSize + e.sizes[e.sizes.length - 1]\n        } else {\n            this.snippetView.previewWidth = e.sizes[e.sizes.length - 1] - e.collapsedComponentSize\n        }\n    }\n    sizeChange(e) {\n        // console.log(e)\n    }\n}\n","module.exports = \"<tam-splitter splitterBarWidth=3>\\n    <tam-splitter-panel [size]=\\\"20\\\" [max]=\\\"30\\\" [min]=\\\"10\\\">\\n        Refined By Panel\\n    </tam-splitter-panel>\\n\\n    <tam-splitter-panel [size]=\\\"80\\\">\\n\\n        <tam-splitter splitterBarWidth=3 [direction]=\\\"'vertical'\\\">\\n            <tam-splitter-panel [size]=\\\"30\\\" [max]=\\\"40\\\" [min]=\\\"20\\\">\\n                Side List Panel\\n            </tam-splitter-panel>\\n\\n            <tam-splitter-panel [size]=\\\"70\\\" [max]=\\\"80\\\" [min]=\\\"60\\\">\\n                Preview Panel\\n            </tam-splitter-panel>\\n        </tam-splitter>\\n    </tam-splitter-panel>\\n\\n</tam-splitter>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'nested-splitter',\n  templateUrl: './nested-splitter.component.html',\n  styleUrls: ['./nested-splitter.component.scss']\n})\nexport class NestedSplitterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<tam-splitter splitterBarWidth=3 [direction]=\\\"snippetView.direction\\\" (sizeChange)=\\\"sizeChange($event)\\\" [useTransition]=\\\"100\\\">\\n    <tam-splitter-panel [size]=\\\"snippetView.refinedByWidth\\\" [max]=\\\"snippetView.refinedByMax\\\" [min]=\\\"snippetView.refinedByMin\\\"\\n        [visible]=\\\"snippetView.refineByShow\\\" (collapsedChange)=\\\"collapsedChange($event)\\\">\\n        Refined By Panel\\n    </tam-splitter-panel>\\n    <tam-splitter-panel [visible]=\\\"snippetView.middleShow\\\" [size]=\\\"snippetView.middleWidth\\\" [max]=\\\"snippetView.middleMax\\\" [min]=\\\"snippetView.middleMin\\\">\\n        Side List Panel\\n    </tam-splitter-panel>\\n    <tam-splitter-panel [size]=\\\"snippetView.previewWidth\\\" [max]=\\\"snippetView.previewMax\\\" [min]=\\\"snippetView.previewMin\\\">\\n        Preview Panel\\n    </tam-splitter-panel>\\n</tam-splitter>\\n<button (click)=\\\"collapse()\\\">collapse</button>\\n<button class=\\\"btn\\\" (click)=\\\"changeDir()\\\">change</button>\"","module.exports = \":host {\\n  width: 100%;\\n  height: 100%;\\n  display: block; }\\n\\nbutton {\\n  position: fixed;\\n  bottom: 10px;\\n  left: 10px; }\\n\\nbutton.btn {\\n    right: 10px;\\n    left: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'simple-splitter',\n    templateUrl: './simple-splitter.component.html',\n    styleUrls: ['./simple-splitter.component.scss']\n})\nexport class SimpleSplitterComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n    snippetView = {\n        direction: \"horizontal\",\n        refinedByWidth: 20,\n        refinedByMax: 30,\n        refinedByMin: 10,\n        refineByShow: true,\n\n        middleWidth: 30,\n        middleMax: 40,\n        middleMin: 20,\n        middleShow: true,\n\n        previewWidth: 50,\n        previewMax: 70,\n        previewMin: 30\n    }\n\n    collapse() {\n        this.snippetView.refineByShow = !this.snippetView.refineByShow;\n    }\n    changeDir() {\n        // this.snippetView.middleShow = !this.snippetView.middleShow;\n        this.snippetView.direction = this.snippetView.direction === \"horizontal\" ? \"vertical\" : \"horizontal\"\n    }\n    collapsedChange(e) {\n        if (e.collapsed) {\n            this.snippetView.previewWidth = e.collapsedComponentSize + e.sizes[e.sizes.length - 1]\n        } else {\n            this.snippetView.previewWidth = e.sizes[e.sizes.length - 1] - e.collapsedComponentSize\n        }\n    }\n    sizeChange(e) {\n        console.log(e)\n    }\n}\n","function count() {\n    let num = 0;\n    return function () {\n        num++;\n        return num;\n    }\n}\nvar index = count();\nexport default index;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}